{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "qnaSku": {
            "type": "string"
        },
        "qnaLocation": {
            "type": "string",
            "defaultValue": "westus"
        },
        "searchSku": {
            "type": "string"
        },
        "qnaWebAppSku": {
            "type": "string"
        },
        "searchHostingMode": {
            "type": "string",
            "defaultValue": "Default"
        },
        "env": {
            "type": "string",
            "allowedValues": [
                "dev",
                "staging",
                "production"
            ]
        },
        "devOpsSpnObjectId": {
            "type": "string"
        }
    },
    "variables": {
        "qnaResName": "[concat('qna-demo', '-', parameters('env'), '-res')]",
        "qnaAccountKey": "qna-accountKey",
        "keyVaultName": "[concat('qna-demo', '-', parameters('env'), '-kv')]"
    },
    "resources": [
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "kind": "QnAMaker",
            "name": "[variables('qnaResName')]",
            "apiVersion": "2017-04-18",
            "location": "[parameters('qnaLocation')]",
            "sku": {
                "name": "[parameters('qnaSku')]"
            },
            "properties": {
                "apiProperties": {
                    "qnaRuntimeEndpoint": "[concat('https://',reference(resourceId('Microsoft.Web/sites', variables('qnaResName'))).hostNames[0])]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', variables('qnaResName'))]",
                "[resourceId('Microsoft.Search/searchServices/', variables('qnaResName'))]"
            ]           
        },
        {
            "name": "[variables('qnaResName')]",
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2015-08-19",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "[parameters('searchHostingMode')]"
            },
            "sku": {
                "name": "[parameters('searchSku')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[variables('qnaResName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "enabled": true,
                "name": "[variables('qnaResName')]",
                "serverFarmId": "[concat('/subscriptions/', subscription().id,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('qnaResName'))]",
                "httpsOnly": true
            },
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('qnaResName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2016-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('qnaResName'))]",
                        "[resourceId('Microsoft.Search/searchServices/', variables('qnaResName'))]"
                    ],
                    "properties": {
                        "AzureSearchName": "[variables('qnaResName')]",
                        "AzureSearchAdminKey": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('qnaResName')), '2015-08-19').primaryKey]",
                        "PrimaryEndpointKey": "[concat(variables('qnaResName'), '-PrimaryEndpointKey')]",
                        "SecondaryEndpointKey": "[concat(variables('qnaResName'), '-SecondaryEndpointKey')]",
                        "DefaultAnswer": "No good match found in KB.",
                        "QNAMAKER_EXTENSION_VERSION": "latest"
                    }
                }               
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(variables('qnaResName'), '/web')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('qnaResName'))]"
            ],
            "tags": {
                "[concat('hidden-related:', '/subscriptions/', subscription().id,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('qnaResName'))]": "empty"
            },
            "properties": {
                "cors": {
                    "allowedOrigins": [
                        "*"
                    ],
                    "supportCredentials": false
                }
            }
        },
        {
            "apiVersion": "2016-09-01",
            "name": "[variables('qnaResName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('qnaResName')]",
                "workerSizeId": "0",
                "reserved": false,
                "numberOfWorkers": "1",
                "hostingEnvironment": ""
            },
            "sku": {
                "name": "[parameters('qnaWebAppSku')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('devOpsSpnObjectId')]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List",
                                "Set"
                            ],
                            "certificates": []
                        }
                    }
                ],
                "tenantId": "[subscription().tenantId]",                
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "vaultUri": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]"
            }          
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2019-09-01",
            "name": "[concat(variables('keyVaultName'), '/', variables('qnaAccountKey'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "properties": {
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts/', variables('qnaResName')),'2021-04-30').key1]"
            }
        }
    ],
    "outputs": {
        "qnaHostEndpoint": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts/', variables('qnaResName')), '2021-04-30').endpoint]"
        }
    }
}